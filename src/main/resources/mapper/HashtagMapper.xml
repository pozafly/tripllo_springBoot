<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pozafly.tripllo.hashtag.dao.HashtagDao">

    <select id="readHashTag" parameterType="String" resultType="com.pozafly.tripllo.hashtag.model.Hashtag">
        select * from hashtag
        where name = #{name}
    </select>

    <select id="readBoardByHashtag" parameterType="Map" resultType="com.pozafly.tripllo.hashtag.model.response.ResponseHashtagByBoard">
        select distinct
                    c.id,
                    c.title,
                    c.bg_color,
                    c.public_yn,
                    c.hashtag,
                    c.like_count,
                    c.created_at,
                    c.created_by,
                    EXISTS
                    (
                        select *
                        from board_has_like
                        where board_id = c.id and user_id = #{userId}
                    ) as own_like,
                    d.picture as created_user_picture
        from hashtag a
            left outer join board_has_hashtag b on a.id = b.hashtag_id
            left outer join board c on b.board_id = c.id
            left outer join user d on d.id = c.created_by
        where
        <if test='hashtagName != null and !"".equals(hashtagName)'>
            a.name like CONCAT('%', #{hashtagName}, '%') and
        </if>
        <if test='lastLikeCount != null and !"".equals(lastLikeCount)'>
            (c.like_count <![CDATA[ < ]]> #{lastLikeCount} or
            (c.like_count = #{lastLikeCount} and
        </if>
        <if test='lastCreatedAt != null and !"".equals(lastCreatedAt)'>
            c.created_at <![CDATA[ < ]]> #{lastCreatedAt})) and
        </if>
        c.public_yn = 'Y'
        order by like_count desc, created_at desc
        <choose>
            <when test='lastCreatedAt != null and !"".equals(lastCreatedAt)'>
                limit 6
            </when>
            <otherwise>
                limit 15
            </otherwise>
        </choose>
    </select>

    <select id="readHashtagOrderByCount" resultType="com.pozafly.tripllo.hashtag.model.response.ResponseOrderByCount">
        select
            count(a.board_id) as count,
            b.name
        from board_has_hashtag a
        left outer join hashtag b on a.hashtag_id = b.id
        group by a.hashtag_id
        order by count desc
        limit 5
    </select>

    <insert id="createHashtag" parameterType="Map">
        insert into hashtag values (null, #{name})
        <selectKey resultType="Long" keyProperty="id" order="AFTER">
            select last_insert_id() as id
        </selectKey>
    </insert>

    <delete id="deleteHashtag" parameterType="Long">
        delete
        from hashtag
        where id = #{id}
    </delete>

</mapper>